<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sPlayerLowerBody</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
Facing = 0
WeaponCount = 0
SelectedWeaponIndex = 0
Power = 5
PowerMax = 75

ResetShunts()
if instance_exists (oRapidFireGun) = false
{
    instance_create (x, y, oRapidFireGun)
}
if instance_exists (oBaitGun) = false
{
    instance_create (x, y, oBaitGun)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*Movement*/

BaseSpeed = 300 / room_speed

speed = 0

if keyboard_check (ord('W'))
{
    vspeed = -BaseSpeed
}

if keyboard_check (ord('S'))
{
   vspeed =  BaseSpeed
}

if keyboard_check (ord('A'))
{
    hspeed = -BaseSpeed
}

if keyboard_check (ord('D'))
{
    hspeed = BaseSpeed
}

image_speed = speed / 20

// Intellegent Bullet Kick

hspeed = hspeed + xShunt
vspeed = vspeed + yShunt
ResetShunts()


//Collision
//If we're about to hit a block

if place_meeting ( x + hspeed, y + vspeed, oSolid)
{
    //Keep as much of our horizontal speed as possible
    OldHspeed = hspeed
    hspeed = 0
    while 
          place_meeting ( x + hspeed + sign(OldHspeed), y, oSolid) = false &amp;&amp; //check there's still room if we crept closer to our old hspeed
          abs (hspeed) &lt; abs (OldHspeed) //check we haven't restored all of our old hspeed, and only pay attention to the "absolute" values, the magnitudes
          {
              hspeed = hspeed + sign(OldHspeed) //Creep towards old hspeed
          }
    //We have now figured out how much of our hspeed we can keep without hitting anything, so we're keeping it.
    
    //Keep as much of our vertical speed as possible
    OldVspeed = vspeed
    vspeed = 0
    while 
          place_meeting ( x + hspeed, y + vspeed + sign(OldVspeed), oSolid) = false &amp;&amp; //check there's still room if we crept closer to our old vspeed
          abs (vspeed) &lt; abs (OldVspeed) //check we haven't restored all of our old vspeed, and only pay attention to the "absolute" values, the magnitudes
          {
              vspeed = vspeed + sign(OldVspeed) //Creep towards old vspeed
          }
}

//Weapon Switching

if mouse_check_button_pressed (mb_right)
{
    //switch to next weapon up
    SelectedWeaponIndex = SelectedWeaponIndex + 1
    //loop back
    if SelectedWeaponIndex &gt;= WeaponCount
    {   
        SelectedWeaponIndex = 0
    }
}


/*Mouselook/Faceing*/

Facing = point_direction (x,y,mouse_x, mouse_y)

//Power Up
if Power &gt;= PowerMax 
{
    //Go to next level
    SaveInventory()
    if room_exists(room_next (room)) room_goto_next ()
}
else
{

    PowerUpCollected = instance_place(x,y,oPowerUp)
    if instance_exists (PowerUpCollected)
    {  
       with PowerUpCollected
       {
            instance_destroy()
       }
       Power = Power + 1
    }
}

//Death with Loop for Gibs

//Look for enemy touching us
EnemyTouchingMe = instance_place (x, y, oEnemy)

//If there is one
if instance_exists (EnemyTouchingMe)
{   
    ScreenShake(80)
    with oSwarmer
    { 
         direction = point_direction (oPlayer.x, oPlayer.y, x, y)
    }
    //Loop Script
    ExplodeIntoaNumberOfGibs(oGame.TotalGibsToCreate, oDestroyed)
    //Death Sound
    audio_play_sound (aDeath, 1, false)
}

//Room Bounding to stay InBounds !KEEP AT BOTTOM!

if x &lt; 20 { x = 20 }
if y &lt; 20 { y = 20 }
if x &gt; room_width - 20 { x = room_width - 20 }
if y &gt; room_height - 20 { y = room_height - 20 }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
//Draw our sprite normally, but facing our "facing" direction, without changing image_angle, so as not to affect collision.

//Lower Body
draw_sprite_ext (sprite_index, image_index,  x, y, image_xscale, image_yscale, direction, image_blend, image_alpha)
//Upper Body
draw_sprite_ext (sPlayer, image_index,  x, y, image_xscale, image_yscale, Facing, image_blend, image_alpha)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
